= MigrationView

I wanted a better way to manage views.  More like the way liquibase does.  
Objectives:

1. Create view in standard rails migration.
2. Have views saved in db/views/#{view}.sql file
3. When view file is modified, reload the view after all other migrations are run.
4. If view is deleted recreate it.
5. If view deleted from other delete view x cascade.  recreate the deleted view.
6. Have task to reload views,   rake db:reload:view 
7. Natively support both postgres and mysql

= Install

"gem 'rails_enum_type', git: 'https://github.com/davidabenson/rails_enum_type.git'"

bundle install

rails generate rails_enum_type:install

rake db:migrate

= Added Tables 
    Adds two tables to track the enum lists, type, and type_item 
= Added View
    type_item_view joins the type and type_item tables
    I.E.  select * from type_item_view where type = 'Color'

= Example Color = [Red,Green,Blue] is preloaded as an example 

= Comparison Example
  house.color.id == ColorType.red.id

= Looping example
  ColorType.items.each |color| do
      Rails.logger.debug("#{color.id}, #{color.name{")
  end


This project rocks and uses MIT-LICENSE.
